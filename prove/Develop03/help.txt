// Program.cs
using System;

class Program
{
    static void Main(string[] args)
    {
        // Example scripture: "Proverbs 3:5-6"
        Scripture scripture = new Scripture("Proverbs 3:5-6", new string[] {
            "Trust in the Lord with all your heart and lean not on your own understanding;",
            "in all your ways submit to him, and he will make your paths straight."
        });

        while (true)
        {
            Console.Clear();
            Console.WriteLine(scripture.GetDisplayText());

            if (scripture.AllWordsHidden())
            {
                Console.WriteLine("All words are hidden. Program will now exit.");
                break;
            }

            Console.WriteLine("\nPress Enter to hide words or type 'quit' to exit.");
            string input = Console.ReadLine();

            if (input?.ToLower() == "quit")
            {
                break;
            }

            scripture.HideRandomWords();
        }
    }
}

// Scripture.cs
using System;
using System.Collections.Generic;
using System.Linq;

class Scripture
{
    public string Reference { get; private set; }
    public List<Verse> Verses { get; private set; }

    public Scripture(string reference, string[] verses)
    {
        Reference = reference;
        Verses = verses.Select(v => new Verse(v)).ToList();
    }

    public string GetDisplayText()
    {
        string text = Reference + "\n";
        text += string.Join("\n", Verses.Select(v => v.GetDisplayText()));
        return text;
    }

    public void HideRandomWords()
    {
        foreach (var verse in Verses)
        {
            verse.HideRandomWords();
        }
    }

    public bool AllWordsHidden()
    {
        return Verses.All(v => v.AllWordsHidden());
    }
}

// Verse.cs
using System;
using System.Collections.Generic;
using System.Linq;

class Verse
{
    private List<Word> Words;

    public Verse(string text)
    {
        Words = text.Split(' ').Select(w => new Word(w)).ToList();
    }

    public string GetDisplayText()
    {
        return string.Join(" ", Words.Select(w => w.GetDisplayText()));
    }

    public void HideRandomWords()
    {
        Random random = new Random();
        List<Word> visibleWords = Words.Where(w => !w.IsHidden).ToList();
        if (visibleWords.Any())
        {
            int index = random.Next(visibleWords.Count);
            visibleWords[index].Hide();
        }
    }

    public bool AllWordsHidden()
    {
        return Words.All(w => w.IsHidden);
    }
}

// Word.cs
class Word
{
    public string Text { get; private set; }
    public bool IsHidden { get; private set; }

    public Word(string text)
    {
        Text = text;
        IsHidden = false;
    }

    public void Hide()
    {
        IsHidden = true;
    }

    public string GetDisplayText()
    {
        return IsHidden ? "___" : Text;
    }
}
